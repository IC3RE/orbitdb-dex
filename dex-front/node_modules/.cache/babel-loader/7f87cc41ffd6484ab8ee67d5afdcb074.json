{"ast":null,"code":"import _classCallCheck from \"/Users/ivan/Desktop/react/dex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ivan/Desktop/react/dex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ivan/Desktop/react/dex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ivan/Desktop/react/dex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ivan/Desktop/react/dex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ivan/Desktop/react/dex/src/components/tableComponents.js\";\nimport React, { Component } from 'react';\nimport ReactTable from \"react-table\";\n\nvar Table =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table, _Component);\n\n  function Table() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      columns: [{\n        Header: 'Coin',\n        accessor: 'coin'\n      }, {\n        Header: 'Quantity',\n        accessor: 'quantity'\n      }, {\n        Header: 'Value (USD)',\n        accessor: 'value'\n      }],\n      rows: [{\n        'coin': 'ETH',\n        'quantity': 5000,\n        'value': 60000\n      }, {\n        'coin': 'XBP',\n        'quantity': 50,\n        'value': 2000\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"render\",\n    value: function render() {\n      var dataColumns = this.state.columns;\n      var dataRows = this.state.rows;\n      var tableHeaders = React.createElement(\"thead\", {\n        className: \"thead-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, dataColumns.map(function (column) {\n        return React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, column);\n      })));\n      var tableBody = dataRows.map(function (row) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, dataColumns.map(function (column) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, row[column]);\n        }));\n      });\n      return React.createElement(\"table\", {\n        className: \"table table-striped\",\n        width: \"50%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, tableHeaders, tableBody);\n    }\n    /*\n    render() {\n        return (\n            <div>\n                <ReactTable\n                    data = {this.state.rows}\n                    columns= {this.state.columns}\n                    defaultPageSize = {3}\n                    pageSizeOptions = {[3,6]}\n                />\n            </div>\n        )\n    }\n    */\n\n  }]);\n\n  return Table;\n}(Component);\n\nexport default Table;","map":{"version":3,"sources":["/Users/ivan/Desktop/react/dex/src/components/tableComponents.js"],"names":["React","Component","ReactTable","Table","state","columns","Header","accessor","rows","dataColumns","dataRows","tableHeaders","map","column","tableBody","row"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,aAAvB;;IAEMC,K;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,CAAC;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,QAAQ,EAAE;AAA3B,OAAD,EAAqC;AAACD,QAAAA,MAAM,EAAE,UAAT;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAArC,EAAiF;AAACD,QAAAA,MAAM,EAAE,aAAT;AAAwBC,QAAAA,QAAQ,EAAE;AAAlC,OAAjF,CADL;AAEJC,MAAAA,IAAI,EAAE,CAAC;AACH,gBAAQ,KADL;AAEC,oBAAY,IAFb;AAGC,iBAAS;AAHV,OAAD,EAIG;AACD,gBAAQ,KADP;AAED,oBAAY,EAFX;AAGD,iBAAS;AAHR,OAJH;AAFF,K;;;;;;6BAcC;AAEL,UAAIC,WAAW,GAAG,KAAKL,KAAL,CAAWC,OAA7B;AACA,UAAIK,QAAQ,GAAG,KAAKN,KAAL,CAAWI,IAA1B;AAEA,UAAIG,YAAY,GAAI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,WAAW,CAACG,GAAZ,CAAgB,UAASC,MAAT,EAAiB;AAAC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,MAAL,CAAP;AAA2B,OAA7D,CAAL,CAA/B,CAApB;AACA,UAAIC,SAAS,GAAGJ,QAAQ,CAACE,GAAT,CAAa,UAASG,GAAT,EAAc;AACvC,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKN,WAAW,CAACG,GAAZ,CAAgB,UAASC,MAAT,EAAiB;AAAE,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKE,GAAG,CAACF,MAAD,CAAR,CAAP;AAAgC,SAAnE,CAAL,CAAR;AAA2F,OAD/E,CAAhB;AAIA,aAAQ;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAuC,QAAA,KAAK,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCF,YADD,EAECG,SAFD,CAAR;AAIH;AAED;;;;;;;;;;;;;;;;;;EA/BgBb,S;;AA+CpB,eAAeE,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from \"react-table\";\n\nclass Table extends Component {\n    state = {\n        columns: [{Header: 'Coin', accessor: 'coin'}, {Header: 'Quantity', accessor: 'quantity'}, {Header: 'Value (USD)', accessor: 'value'}],\n        rows: [{\n            'coin': 'ETH',\n                'quantity': 5000,\n                'value': 60000\n              }, {\n                'coin': 'XBP',\n                'quantity': 50,\n                'value': 2000\n              }\n        ]\n    }\n\n    render() {\n\n        var dataColumns = this.state.columns;\n        var dataRows = this.state.rows;\n\n        var tableHeaders = (<thead className=\"thead-dark\" ><tr>{dataColumns.map(function(column) {return <th>{column}</th>; })}</tr></thead>);\n        var tableBody = dataRows.map(function(row) {\n            return (<tr>{dataColumns.map(function(column) { return <td>{row[column]}</td>; })}</tr>); });\n\n\n        return (<table className=\"table table-striped\" width=\"50%\">\n                {tableHeaders}\n                {tableBody}\n              </table>);\n    }\n    \n    /*\n    render() {\n        return (\n            <div>\n                <ReactTable\n                    data = {this.state.rows}\n                    columns= {this.state.columns}\n                    defaultPageSize = {3}\n                    pageSizeOptions = {[3,6]}\n                />\n            </div>\n        )\n    }\n    */\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}